#!/bin/bash

echo "üöÄ YAKABOT INICIANDO..."
echo "======================="

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios..."
mkdir -p /opt/render/.cache/puppeteer
mkdir -p /tmp/yaka_stickers
mkdir -p /tmp/yaka_uploads

# Configurar vari√°veis de ambiente
export PUPPETEER_CACHE_DIR="/opt/render/.cache/puppeteer"
export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD="false"

echo "üîß Instalando Chrome (FOR√áADO)..."
npx puppeteer browsers install chrome --force

# Aguardar instala√ß√£o
sleep 3

# Verificar se Chrome foi instalado
echo "üîç Verificando instala√ß√£o do Chrome..."
if [ -d "/opt/render/.cache/puppeteer/chrome" ]; then
    echo "‚úÖ Diret√≥rio Puppeteer Chrome existe!"
    
    # Listar vers√µes instaladas
    ls -la /opt/render/.cache/puppeteer/chrome/
    
    # Procurar execut√°vel do Chrome
    CHROME_PATH=$(find /opt/render/.cache/puppeteer/chrome -name "chrome" -type f 2>/dev/null | head -1)
    
    if [ -n "$CHROME_PATH" ]; then
        echo "‚úÖ Chrome encontrado: $CHROME_PATH"
        
        # Tornar execut√°vel
        chmod +x "$CHROME_PATH"
        
        # Configurar vari√°vel
        export PUPPETEER_EXECUTABLE_PATH="$CHROME_PATH"
        
        # Testar Chrome
        if "$CHROME_PATH" --version 2>/dev/null; then
            echo "‚úÖ Chrome funcional!"
        else
            echo "‚ö†Ô∏è Chrome instalado mas com problemas"
        fi
    else
        echo "‚ùå Chrome n√£o encontrado ap√≥s instala√ß√£o"
    fi
else
    echo "‚ùå Diret√≥rio Puppeteer Chrome n√£o criado"
fi

echo ""
echo "üöÄ INICIANDO APLICA√á√ÉO..."
echo "========================"

# Iniciar aplica√ß√£o
node --max-old-space-size=512 index.js
